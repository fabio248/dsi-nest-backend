// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @default(autoincrement()) @unique()
  firstName      String    @map("first_name")
  lastName      String    @map("last_name")
  email         String    @unique()
  password      String
  role          UserRole? @default(CLIENT)
  phone         String?
  birthday      DateTime?
  direction     String?
  dui           String?   
  recoveryToken String?   @map("recovery_token")

  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt() @map("updated_at")

  //relations
  pets          Pet[]

  @@map("user")
}

model Specie {
  id            Int       @default(autoincrement()) @unique()
  name          String    @unique()

  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt()    @map("updated_at")

  //relations
  pets          Pet[]

  @@map("specie")
}


model Pet {
  id            Int       @default(autoincrement()) @unique()
  name          String
  gender        Gender
  raza          String
  color         String
  isHaveTatto   Boolean   @map("is_have_tatto")
  pedigree      Boolean   
  birthday      DateTime

  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt() @map("updated_at")

  //relation
  user          User      @relation(fields: [userId], references: [id])
  userId        Int       @map("user_id")

  specie        Specie    @relation(fields: [specieId], references: [id])
  specieId      Int       @map("specie_id")

  @@map("pet")
}

model base {
  id            Int       @default(autoincrement()) @unique()

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt()
}


enum UserRole {
  ADMIN
  CLIENT
}

enum Gender{
  MACHO
  HEMBRA
}